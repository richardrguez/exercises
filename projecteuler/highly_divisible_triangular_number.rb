# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred
# divisors?

require 'prime'

def triangule_number(num)
  (1..num).inject(:+)
end

def count_divisor(num)
  sum = 1
  # prime_division return two dimensional array.
  # for 48, [3,1], [2,4] is the result
  num.prime_division.each do |x|
    sum *= (x[1] + 1)
  end
  sum
end

def highly_divisible_triangular_number

  result = 0
  x = 1

  while count_divisor(triangule_number(x)) < 500
    x += 1
    result = triangule_number(x)
  end

  puts result
end

highly_divisible_triangular_number
# Answer: 76576500
